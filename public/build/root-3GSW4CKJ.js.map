{
  "version": 3,
  "sources": ["../../app/root.tsx", "../../app/components/LanguageToggle.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\root.tsx\");\n}\n// REMIX HMR END\n\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration } from \"@remix-run/react\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { LanguageProvider } from '~/contexts/LanguageContext';\nimport LanguageToggle from '~/components/LanguageToggle';\nexport const links = () => [{\n  rel: \"stylesheet\",\n  href: \"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\"\n}, {\n  rel: \"stylesheet\",\n  href: \"/styles/global.css\"\n}];\nexport const meta = () => [{\n  charSet: \"utf-8\"\n}, {\n  title: \"Arslan Portfolio\"\n}, {\n  name: \"viewport\",\n  content: \"width=device-width,initial-scale=1\"\n}];\nexport default function App() {\n  _s();\n  const gradientRef = useRef(null);\n  const [isClient, setIsClient] = useState(false);\n  useEffect(() => {\n    setIsClient(true);\n    const updateGradient = e => {\n      if (gradientRef.current) {\n        const x = e.clientX;\n        const y = e.clientY; // window.scrollY'yi kald\u0131rd\u0131k\n        gradientRef.current.style.background = `radial-gradient(800px at ${x}px ${y}px, rgba(29, 78, 216, 0.15), transparent 80%)`;\n      }\n    };\n    document.addEventListener('mousemove', updateGradient);\n    return () => {\n      document.removeEventListener('mousemove', updateGradient);\n    };\n  }, []);\n  return <html lang=\"en\" className=\"scroll-smooth\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body className=\"bg-navy leading-relaxed text-slate antialiased\">\r\n        <LanguageProvider>\r\n          <LanguageToggle />\r\n          {isClient && <div id=\"gradient-background\" ref={gradientRef} className=\"pointer-events-none fixed inset-0 z-[-1] transition duration-300\" />}\r\n          <Outlet />\r\n        </LanguageProvider>\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\r\n      </body>\r\n    </html>;\n}\n_s(App, \"pUfcdkDGVTbo/G0gsl5Gu5U065o=\");\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\components\\\\\\\\LanguageToggle.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\components\\\\LanguageToggle.tsx\");\n  import.meta.hot.lastModified = \"1729544122322.1904\";\n}\n// REMIX HMR END\n\nimport { useLanguage } from '~/contexts/LanguageContext';\nconst LanguageToggle = () => {\n  _s();\n  const {\n    language,\n    setLanguage\n  } = useLanguage();\n  return <div className=\"lang-btn-container\">\r\n      <button className={`lang-btn ${language === 'tr' ? 'active' : ''}`} onClick={() => setLanguage('tr')}>\r\n        TR\r\n      </button>\r\n      <button className={`lang-btn ${language === 'en' ? 'active' : ''}`} onClick={() => setLanguage('en')}>\r\n        EN\r\n      </button>\r\n    </div>;\n};\n_s(LanguageToggle, \"UZUYajh7f/ecAaqs8+JAYjvISYI=\", false, function () {\n  return [useLanguage];\n});\n_c = LanguageToggle;\nexport default LanguageToggle;\nvar _c;\n$RefreshReg$(_c, \"LanguageToggle\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,IAAAA,gBAA4C;;;ACQtC;AA5BN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,8CAAgD,EAAE;AAAA,EAC3F;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqC;AACrC,cAAY,IAAI,eAAe;AACjC;AAIA,IAAM,iBAAiB,MAAM;AAC3B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,EACF,IAAI,YAAY;AAChB,SAAO,mDAAC,SAAI,WAAU,sBAClB;AAAA,uDAAC,YAAO,WAAW,YAAY,aAAa,OAAO,WAAW,MAAM,SAAS,MAAM,YAAY,IAAI,GAAG,kBAAtG;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,mDAAC,YAAO,WAAW,YAAY,aAAa,OAAO,WAAW,MAAM,SAAS,MAAM,YAAY,IAAI,GAAG,kBAAtG;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OANG;AAAA;AAAA;AAAA;AAAA,SAOL;AACJ;AACA,GAAG,gBAAgB,gCAAgC,OAAO,WAAY;AACpE,SAAO,CAAC,WAAW;AACrB,CAAC;AACD,KAAK;AACL,IAAO,yBAAQ;AACf,IAAI;AACJ,aAAa,IAAI,gBAAgB;AAEjC,OAAO,eAAe;AACtB,OAAO,eAAe;;;ADad,IAAAC,0BAAA;AA1DR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sBAAwB,EAAE;AAAA,EACnE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAIC,MAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAe;AACjB;AAOO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACR,CAAC;AACM,IAAM,OAAO,MAAM,CAAC;AAAA,EACzB,SAAS;AACX,GAAG;AAAA,EACD,OAAO;AACT,GAAG;AAAA,EACD,MAAM;AAAA,EACN,SAAS;AACX,CAAC;AACc,SAAR,MAAuB;AAC5B,EAAAA,IAAG;AACH,QAAM,kBAAc,sBAAO,IAAI;AAC/B,QAAM,CAAC,UAAU,WAAW,QAAI,wBAAS,KAAK;AAC9C,+BAAU,MAAM;AACd,gBAAY,IAAI;AAChB,UAAM,iBAAiB,OAAK;AAC1B,UAAI,YAAY,SAAS;AACvB,cAAM,IAAI,EAAE;AACZ,cAAM,IAAI,EAAE;AACZ,oBAAY,QAAQ,MAAM,aAAa,4BAA4B,OAAO;AAAA,MAC5E;AAAA,IACF;AACA,aAAS,iBAAiB,aAAa,cAAc;AACrD,WAAO,MAAM;AACX,eAAS,oBAAoB,aAAa,cAAc;AAAA,IAC1D;AAAA,EACF,GAAG,CAAC,CAAC;AACL,SAAO,oDAAC,UAAK,MAAK,MAAK,WAAU,iBAC7B;AAAA,wDAAC,UACC;AAAA,0DAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,oDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,oDAAC,UAAK,WAAU,kDACd;AAAA,0DAAC,oBACC;AAAA,4DAAC,4BAAD;AAAA;AAAA;AAAA;AAAA,eAAgB;AAAA,QACf,YAAY,oDAAC,SAAI,IAAG,uBAAsB,KAAK,aAAa,WAAU,sEAA1D;AAAA;AAAA;AAAA;AAAA,eAA6H;AAAA,QAC1I,oDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,eAAQ;AAAA,WAHV;AAAA;AAAA;AAAA;AAAA,aAIA;AAAA,MACA,oDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,oDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACkC,oDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,SARzD;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,OAdG;AAAA;AAAA;AAAA;AAAA,SAeL;AACJ;AACAA,IAAG,KAAK,8BAA8B;AACtCC,MAAK;AACL,IAAIA;AACJ,aAAaA,KAAI,KAAK;AAEtB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react", "import_jsx_dev_runtime", "_s", "_c"]
}
